<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>provisioning</artifactId>
    <groupId>com.backbase.cxp</groupId>
    <version>b369</version>
  </parent>

  <artifactId>provisioning-api</artifactId>
  <packaging>war</packaging>

  <properties>
    <javax_el_api_version>2.2.4</javax_el_api_version>
    <javax_el_version>2.2.4</javax_el_version>
    <stax_api>1.0-2</stax_api>
    <stax_api_latest>1.0.1</stax_api_latest>
    <spock_spring_version>1.0-groovy-2.4</spock_spring_version>
    <powermock.version>2.0.0</powermock.version>
    <cglib_nodep_version>3.2.0</cglib_nodep_version>
    <javax_ws_rs_api_version>2.0.1</javax_ws_rs_api_version>
    <raml_tester_version>0.8.5</raml_tester_version>
    <spring.cloud.stream.binder.jms.activemq.version>2.0.2</spring.cloud.stream.binder.jms.activemq.version>

    <skip.integration.tests>true</skip.integration.tests>
    <skip.unit.tests>false</skip.unit.tests>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>multi-tenancy</artifactId>
    </dependency>

    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>spring-cloud-stream-binder-jms-activemq</artifactId>
      <version>${spring.cloud.stream.binder.jms.activemq.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>29.0-jre</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-cloudfoundry-connector</artifactId>
    </dependency>

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
    </dependency>

    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>internal-jwt</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jsonSchema</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>javax.el</artifactId>
      <version>${javax_el_version}</version>
    </dependency>

    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>javax.el-api</artifactId>
      <version>${javax_el_api_version}</version>
    </dependency>

    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>javax.jms-api</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20180813</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-commons</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-spring-service-connector</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-boot-starter-web</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>

    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>spring-security-csrf</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.xml.stream</groupId>
      <artifactId>stax-api</artifactId>
      <version>${stax_api}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>stax</groupId>
      <artifactId>stax-api</artifactId>
      <version>${stax_api_latest}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>${cglib_nodep_version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>${javax_ws_rs_api_version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>guru.nidi.raml</groupId>
      <artifactId>raml-tester</artifactId>
      <version>${raml_tester_version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>${spock_spring_version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-spring</artifactId>
      <version>${spock_spring_version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-stream-test-support</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>service-sdk-starter-logging</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>docker-build-jboss</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <imageName>registry.backbase.com/provisioning-jboss</imageName>
              <dockerDirectory>${project.basedir}/src/main/docker/jboss</dockerDirectory>
              <buildDirectory>${project.build.directory}/docker/jboss</buildDirectory>
              <imageTags>
                <imageTag>${project.version}</imageTag>
                <imageTag>latest</imageTag>
              </imageTags>
              <resources>
                <resource>
                  <targetPath>/tmp/</targetPath>
                  <directory>${project.build.directory}</directory>
                  <include>${project.build.finalName}.war</include>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>docker-build-tomcat</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <imageName>registry.backbase.com/provisioning-tomcat</imageName>
              <dockerDirectory>${project.basedir}/src/main/docker/tomcat</dockerDirectory>
              <buildDirectory>${project.build.directory}/docker/tomcat</buildDirectory>
              <imageTags>
                <imageTag>${project.version}</imageTag>
                <imageTag>latest</imageTag>
              </imageTags>
              <resources>
                <resource>
                  <targetPath>/tmp/</targetPath>
                  <directory>${project.build.directory}</directory>
                  <include>${project.build.finalName}.war</include>
                </resource>
                <resource>
                  <targetPath>/tmp/</targetPath>
                  <directory>${project.basedir}/src/main/docker/tomcat</directory>
                  <include>setenv.sh</include>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>docker-build-wslc</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <imageName>registry.backbase.com/provisioning-wslc</imageName>
              <dockerDirectory>${project.basedir}/src/main/docker/wslc</dockerDirectory>
              <buildDirectory>${project.build.directory}/docker/wslc</buildDirectory>
              <imageTags>
                <imageTag>${project.version}</imageTag>
                <imageTag>latest</imageTag>
              </imageTags>
              <resources>
                <resource>
                  <targetPath>/tmp/</targetPath>
                  <directory>${project.build.directory}</directory>
                  <include>${project.build.finalName}.war</include>
                </resource>
                <resource>
                  <targetPath>/tmp/</targetPath>
                  <directory>${project.basedir}/src/main/docker/wslc</directory>
                  <include>jvm.options</include>
                </resource>
                <resource>
                  <targetPath>/tmp/</targetPath>
                  <directory>${project.basedir}/src/main/docker/wslc</directory>
                  <include>httpEncoding.xml</include>
                </resource>
                <resource>
                  <targetPath>/tmp/</targetPath>
                  <directory>${project.basedir}/src/main/docker/wslc</directory>
                  <include>csp-policy.yml</include>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>docker-push-jboss</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
            <configuration>
              <imageName>registry.backbase.com/provisioning-jboss</imageName>
              <imageTags>
                <imageTag>${project.version}</imageTag>
                <imageTag>latest</imageTag>
              </imageTags>
            </configuration>
          </execution>
          <execution>
            <id>docker-push-tomcat</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
            <configuration>
              <imageName>registry.backbase.com/provisioning-tomcat</imageName>
              <imageTags>
                <imageTag>${project.version}</imageTag>
                <imageTag>latest</imageTag>
              </imageTags>
            </configuration>
          </execution>
          <execution>
            <id>docker-push-wslc</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
            <configuration>
              <imageName>registry.backbase.com/provisioning-wslc</imageName>
              <imageTags>
                <imageTag>${project.version}</imageTag>
                <imageTag>latest</imageTag>
              </imageTags>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <finalName>${project.parent.artifactId}-${project.version}-sql</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>src/main/resources/assemble/package.xml</descriptor>
          </descriptors>
          <outputDirectory>${project.build.directory}/distributions</outputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>report-only</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <goals>
              <goal>generateStubs</goal>
              <goal>compile</goal>
              <goal>generateTestStubs</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.gmaven.runtime</groupId>
            <artifactId>gmaven-runtime-2.0</artifactId>
            <version>1.5</version>
            <exclusions>
              <exclusion>
                <artifactId>groovy-all</artifactId>
                <groupId>org.codehaus.groovy</groupId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy.version}</version>
            <type>pom</type>
          </dependency>
        </dependencies>
        <configuration>
          <providerSelection>2.0</providerSelection>
          <source/>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.hibernate.orm.tooling</groupId>
        <artifactId>hibernate-enhance-maven-plugin</artifactId>
        <version>${hibernate.version}</version>
        <executions>
          <execution>
            <configuration>
              <failOnError>true</failOnError>
              <enableLazyInitialization>true</enableLazyInitialization>
            </configuration>
            <goals>
              <goal>enhance</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
